{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","draggable","setDraggable","mainMouseOver","mainMouseOut","id","disabled","className","icon","faArrowsAlt","value","onChange","event","target","onMouseOver","onMouseOut","source","ReactDOM","render","document","getElementById"],"mappings":"sPA+EeA,MApCf,WAAgB,IAAD,EACaC,mBAnCV,4iBAkCH,mBACNC,EADM,KACCC,EADD,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,KAQPC,EAAgB,WACpBD,GAAa,IAGTE,EAAe,WACnBF,GAAa,IAGf,OACC,yBAAKG,GAAK,UACP,kBAAC,IAAD,CAAWC,SAAYL,GACrB,yBAAKI,GAAK,kBAAkBE,UAAY,aACtC,yBAAKA,UAAY,WAAU,wCAAmB,8BAAM,kBAAC,IAAD,CAAiBC,KAAMC,QAC3E,8BAAUC,MAASX,EAAOY,SAjBb,SAACC,GACpBZ,EAASY,EAAMC,OAAOH,QAgBoCI,YAAeX,EAAeY,WAAcX,EAAcC,GAAK,aAGvH,kBAAC,IAAD,CAAWC,SAAYL,GACrB,yBAAKI,GAAK,mBAAmBE,UAAY,aACvC,yBAAKA,UAAY,WAAU,2CAAsB,8BAAM,kBAAC,IAAD,CAAiBC,KAAMC,QAC9E,yBAAKJ,GAAK,UAAUS,YAAeX,EAAeY,WAAcX,GAC9D,kBAAC,IAAD,CAAeY,OAAUjB,SClErCkB,IAASC,OAAQ,kBAAE,EAAF,MAAUC,SAASC,eAAe,U","file":"static/js/main.efd18198.chunk.js","sourcesContent":["import React, {useState} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport Draggable, {DraggableCore} from 'react-draggable'; // Both at the same time\n\n\nconst startingText = \n`# _My Markdown Previewer_\n\nA quick tutorial: \n\n# Header 1\n## Header 2\n\n_make a phrase italic_  **make a phrase bold** **_bold and italic_**\n\n[Links!](https://www.cold-pac.github.io)\n\n![Images](https://cold-pac.github.io/files/favicon-16x16.png)\n\n> Blockquotes  \n> place a caret character on each line of the blockquote\n\n\\`inline code\\` \n\\`\\`\\`\ncode \nblock\n\\`\\`\\`\n\n* unordered\n  * two spaces for indent\n* list\n\n1. ordered\n2. list\n\nMarkdown requires two spaces for a hard break  \nuse 2 spaces after each newline to get soft breaks\n`;\n\nfunction App() {\n  const [input, setInput] = useState(startingText);\n  const [draggable, setDraggable] = useState(false);\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const mainMouseOver = () => {\n    setDraggable(true);\n  }\n\n  const mainMouseOut = () => {\n    setDraggable(false);\n  }\n\n  return (\n   <div id = \"master\">\n      <Draggable disabled = {draggable}>\n        <div id = \"editorContainer\" className = \"container\">\n          <div className = \"headBar\"><span>Editor</span><span><FontAwesomeIcon icon={faArrowsAlt}/></span></div>\n          <textarea value = {input} onChange = {handleChange} onMouseOver = {mainMouseOver} onMouseOut = {mainMouseOut} id = \"editor\"></textarea>\n        </div>\n      </Draggable>\n      <Draggable disabled = {draggable}>\n        <div id = \"previewContainer\" className = \"container\">\n          <div className = \"headBar\"><span>Previewer</span><span><FontAwesomeIcon icon={faArrowsAlt}/></span></div>\n          <div id = \"preview\" onMouseOver = {mainMouseOver} onMouseOut = {mainMouseOut}>\n            <ReactMarkdown source = {input} /> \n          </div>\n        </div>\n      </Draggable>\n   </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}